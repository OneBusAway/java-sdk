// File generated from our OpenAPI spec by Stainless.

package org.onebusaway.models.scheduleforroute

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test
import org.onebusaway.core.jsonMapper

internal class ScheduleForRouteRetrieveResponseTest {

    @Test
    fun create() {
        val scheduleForRouteRetrieveResponse =
            ScheduleForRouteRetrieveResponse.builder()
                .code(0L)
                .currentTime(0L)
                .text("text")
                .version(0L)
                .data(
                    ScheduleForRouteRetrieveResponse.Data.builder()
                        .entry(
                            ScheduleForRouteRetrieveResponse.Data.Entry.builder()
                                .routeId("routeId")
                                .scheduleDate(0L)
                                .addServiceId("string")
                                .addStop(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.Stop.builder()
                                        .id("id")
                                        .lat(0.0)
                                        .locationType(0L)
                                        .lon(0.0)
                                        .name("name")
                                        .parent("parent")
                                        .addRouteId("string")
                                        .addStaticRouteId("string")
                                        .code("code")
                                        .direction("direction")
                                        .wheelchairBoarding("wheelchairBoarding")
                                        .build()
                                )
                                .addStopTripGrouping(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.StopTripGrouping
                                        .builder()
                                        .directionId("directionId")
                                        .addStopId("string")
                                        .addTripHeadsign("string")
                                        .addTripId("string")
                                        .addTripsWithStopTime(
                                            ScheduleForRouteRetrieveResponse.Data.Entry
                                                .StopTripGrouping
                                                .TripsWithStopTime
                                                .builder()
                                                .addStopTime(
                                                    ScheduleForRouteRetrieveResponse.Data.Entry
                                                        .StopTripGrouping
                                                        .TripsWithStopTime
                                                        .StopTime
                                                        .builder()
                                                        .arrivalEnabled(true)
                                                        .arrivalTime(0L)
                                                        .departureEnabled(true)
                                                        .departureTime(0L)
                                                        .stopId("stopId")
                                                        .tripId("tripId")
                                                        .serviceId("serviceId")
                                                        .stopHeadsign("stopHeadsign")
                                                        .build()
                                                )
                                                .tripId("tripId")
                                                .build()
                                        )
                                        .build()
                                )
                                .addTrip(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.Trip.builder()
                                        .id("id")
                                        .routeId("routeId")
                                        .serviceId("serviceId")
                                        .blockId("blockId")
                                        .directionId("directionId")
                                        .peakOffpeak(0L)
                                        .routeShortName("routeShortName")
                                        .shapeId("shapeId")
                                        .timeZone("timeZone")
                                        .tripHeadsign("tripHeadsign")
                                        .tripShortName("tripShortName")
                                        .build()
                                )
                                .build()
                        )
                        .build()
                )
                .build()

        assertThat(scheduleForRouteRetrieveResponse.code()).isEqualTo(0L)
        assertThat(scheduleForRouteRetrieveResponse.currentTime()).isEqualTo(0L)
        assertThat(scheduleForRouteRetrieveResponse.text()).isEqualTo("text")
        assertThat(scheduleForRouteRetrieveResponse.version()).isEqualTo(0L)
        assertThat(scheduleForRouteRetrieveResponse.data())
            .isEqualTo(
                ScheduleForRouteRetrieveResponse.Data.builder()
                    .entry(
                        ScheduleForRouteRetrieveResponse.Data.Entry.builder()
                            .routeId("routeId")
                            .scheduleDate(0L)
                            .addServiceId("string")
                            .addStop(
                                ScheduleForRouteRetrieveResponse.Data.Entry.Stop.builder()
                                    .id("id")
                                    .lat(0.0)
                                    .locationType(0L)
                                    .lon(0.0)
                                    .name("name")
                                    .parent("parent")
                                    .addRouteId("string")
                                    .addStaticRouteId("string")
                                    .code("code")
                                    .direction("direction")
                                    .wheelchairBoarding("wheelchairBoarding")
                                    .build()
                            )
                            .addStopTripGrouping(
                                ScheduleForRouteRetrieveResponse.Data.Entry.StopTripGrouping
                                    .builder()
                                    .directionId("directionId")
                                    .addStopId("string")
                                    .addTripHeadsign("string")
                                    .addTripId("string")
                                    .addTripsWithStopTime(
                                        ScheduleForRouteRetrieveResponse.Data.Entry.StopTripGrouping
                                            .TripsWithStopTime
                                            .builder()
                                            .addStopTime(
                                                ScheduleForRouteRetrieveResponse.Data.Entry
                                                    .StopTripGrouping
                                                    .TripsWithStopTime
                                                    .StopTime
                                                    .builder()
                                                    .arrivalEnabled(true)
                                                    .arrivalTime(0L)
                                                    .departureEnabled(true)
                                                    .departureTime(0L)
                                                    .stopId("stopId")
                                                    .tripId("tripId")
                                                    .serviceId("serviceId")
                                                    .stopHeadsign("stopHeadsign")
                                                    .build()
                                            )
                                            .tripId("tripId")
                                            .build()
                                    )
                                    .build()
                            )
                            .addTrip(
                                ScheduleForRouteRetrieveResponse.Data.Entry.Trip.builder()
                                    .id("id")
                                    .routeId("routeId")
                                    .serviceId("serviceId")
                                    .blockId("blockId")
                                    .directionId("directionId")
                                    .peakOffpeak(0L)
                                    .routeShortName("routeShortName")
                                    .shapeId("shapeId")
                                    .timeZone("timeZone")
                                    .tripHeadsign("tripHeadsign")
                                    .tripShortName("tripShortName")
                                    .build()
                            )
                            .build()
                    )
                    .build()
            )
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val scheduleForRouteRetrieveResponse =
            ScheduleForRouteRetrieveResponse.builder()
                .code(0L)
                .currentTime(0L)
                .text("text")
                .version(0L)
                .data(
                    ScheduleForRouteRetrieveResponse.Data.builder()
                        .entry(
                            ScheduleForRouteRetrieveResponse.Data.Entry.builder()
                                .routeId("routeId")
                                .scheduleDate(0L)
                                .addServiceId("string")
                                .addStop(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.Stop.builder()
                                        .id("id")
                                        .lat(0.0)
                                        .locationType(0L)
                                        .lon(0.0)
                                        .name("name")
                                        .parent("parent")
                                        .addRouteId("string")
                                        .addStaticRouteId("string")
                                        .code("code")
                                        .direction("direction")
                                        .wheelchairBoarding("wheelchairBoarding")
                                        .build()
                                )
                                .addStopTripGrouping(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.StopTripGrouping
                                        .builder()
                                        .directionId("directionId")
                                        .addStopId("string")
                                        .addTripHeadsign("string")
                                        .addTripId("string")
                                        .addTripsWithStopTime(
                                            ScheduleForRouteRetrieveResponse.Data.Entry
                                                .StopTripGrouping
                                                .TripsWithStopTime
                                                .builder()
                                                .addStopTime(
                                                    ScheduleForRouteRetrieveResponse.Data.Entry
                                                        .StopTripGrouping
                                                        .TripsWithStopTime
                                                        .StopTime
                                                        .builder()
                                                        .arrivalEnabled(true)
                                                        .arrivalTime(0L)
                                                        .departureEnabled(true)
                                                        .departureTime(0L)
                                                        .stopId("stopId")
                                                        .tripId("tripId")
                                                        .serviceId("serviceId")
                                                        .stopHeadsign("stopHeadsign")
                                                        .build()
                                                )
                                                .tripId("tripId")
                                                .build()
                                        )
                                        .build()
                                )
                                .addTrip(
                                    ScheduleForRouteRetrieveResponse.Data.Entry.Trip.builder()
                                        .id("id")
                                        .routeId("routeId")
                                        .serviceId("serviceId")
                                        .blockId("blockId")
                                        .directionId("directionId")
                                        .peakOffpeak(0L)
                                        .routeShortName("routeShortName")
                                        .shapeId("shapeId")
                                        .timeZone("timeZone")
                                        .tripHeadsign("tripHeadsign")
                                        .tripShortName("tripShortName")
                                        .build()
                                )
                                .build()
                        )
                        .build()
                )
                .build()

        val roundtrippedScheduleForRouteRetrieveResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(scheduleForRouteRetrieveResponse),
                jacksonTypeRef<ScheduleForRouteRetrieveResponse>(),
            )

        assertThat(roundtrippedScheduleForRouteRetrieveResponse)
            .isEqualTo(scheduleForRouteRetrieveResponse)
    }
}
